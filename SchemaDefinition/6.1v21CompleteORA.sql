SPOOL C:\ORATEMP\6.1v21CompleteORA.log

-- 6.1 v19 to 6.1 v20 Upgrade Oracle WERCS database update


DELETE FROM T_SEC_R_S_R WHERE F_SID IN(-2251);


DELETE FROM T_SEC_OBJECTS WHERE F_SID IN (-2251);


DELETE FROM T_SEC_USER_ROLES 
WHERE F_USER_ID IN (SELECT F_USER_ID FROM T_SEC_USERS WHERE F_USER_NAME IN ('ETL','REGLOAD'))
AND F_ROLE_ID <> 1;

COMMIT;


-- Prep New Security Entries

INSERT INTO T_SEC_OBJECTS
( F_SID , F_NAME , F_PARENT , F_TYPE , F_DATE_STAMP , F_USER_UPDATED )
VALUES (-2265 , 'L_ENTRY_PAGE' , 'LABEL' ,-1 , sysdate, 'ADMIN');


INSERT INTO T_SEC_R_S_R ( F_SID , F_RIGHTS , F_ROLE_ID, F_USER_UPDATED, F_DATE_STAMP ) 
SELECT -2265 , 2 , F_ROLE_ID, 'ADMIN',  sysdate 
FROM T_SEC_ROLES; 


INSERT INTO T_SEC_OBJECTS ( F_SID , F_NAME , F_PARENT , F_TYPE , F_DATE_STAMP , F_USER_UPDATED )
VALUES (-2266 , 'L_QUEUE_HISTORY_PAGE' , 'LABEL' ,-1 , sysdate, 'ADMIN');

INSERT INTO T_SEC_R_S_R ( F_SID , F_RIGHTS , F_ROLE_ID, F_USER_UPDATED, F_DATE_STAMP ) 
SELECT -2266 , 2 , F_ROLE_ID, 'ADMIN',  sysdate 
FROM T_SEC_ROLES; 


INSERT INTO T_SEC_OBJECTS ( F_SID , F_NAME , F_PARENT , F_TYPE , F_DATE_STAMP , F_USER_UPDATED ) 
VALUES (-2267 , 'L_QUEUE_PAGE' , 'LABEL' ,-1 , sysdate, 'ADMIN');  

INSERT INTO T_SEC_R_S_R ( F_SID , F_RIGHTS , F_ROLE_ID, F_USER_UPDATED, F_DATE_STAMP ) 
SELECT -2267 , 2 , F_ROLE_ID, 'ADMIN',  sysdate 
FROM T_SEC_ROLES; 


INSERT INTO T_SEC_OBJECTS ( F_SID , F_NAME , F_PARENT , F_TYPE , F_DATE_STAMP , F_USER_UPDATED ) 
VALUES (-2268 , 'L_CONGIF_PAGE' , 'LABEL' ,-1 , sysdate, 'ADMIN'); 
 

INSERT INTO T_SEC_R_S_R ( F_SID , F_RIGHTS , F_ROLE_ID, F_USER_UPDATED, F_DATE_STAMP )
VALUES (-2268 , 2 , 1, 'ADMIN',  sysdate);
 

INSERT INTO T_SEC_OBJECTS ( F_SID , F_NAME , F_PARENT , F_TYPE , F_DATE_STAMP , F_USER_UPDATED ) 
VALUES (-2281 , 'Unity' , 'Unity' ,-1 , sysdate, 'ADMIN');  

INSERT INTO T_SEC_R_S_R ( F_SID , F_RIGHTS , F_ROLE_ID, F_USER_UPDATED, F_DATE_STAMP ) 
SELECT -2281 , 2 , F_ROLE_ID, 'ADMIN',  sysdate 
FROM T_SEC_ROLES; 



INSERT INTO T_SEC_OBJECTS ( F_SID , F_NAME , F_PARENT , F_TYPE , F_DATE_STAMP , F_USER_UPDATED )
VALUES (-2282 , 'Unity' , 'WercsSmart Connect' ,-1 , sysdate, 'ADMIN');  


INSERT INTO T_SEC_R_S_R ( F_SID , F_RIGHTS , F_ROLE_ID, F_USER_UPDATED, F_DATE_STAMP )
SELECT -2282 , 2 , F_ROLE_ID, 'ADMIN',  sysdate 
FROM T_SEC_ROLES; 



COMMIT;


DELETE FROM T_SEC_OBJECTS WHERE F_SID = '-2284';
DELETE FROM T_SEC_R_S_R WHERE F_SID = '-2284';
 
INSERT INTO T_SEC_OBJECTS ( F_SID , F_NAME , F_PARENT , F_TYPE , F_DATE_STAMP , F_USER_UPDATED )
VALUES (-2284 , 'APPLY_CAS_NAME_CHANGE' , 'Author' , -1 , sysdate , 'ADMIN');

INSERT INTO T_SEC_R_S_R ( F_SID , F_RIGHTS , F_ROLE_ID, F_USER_UPDATED, F_DATE_STAMP )
SELECT -2284 , 2 , F_ROLE_ID, 'ADMIN',  sysdate FROM T_SEC_ROLES;

COMMIT;
 
 
DELETE FROM T_SEC_OBJECTS WHERE F_SID = '-2285';
DELETE FROM T_SEC_R_S_R WHERE F_SID = '-2285';
 
INSERT INTO T_SEC_OBJECTS ( F_SID , F_NAME , F_PARENT , F_TYPE , F_DATE_STAMP , F_USER_UPDATED )
VALUES (-2285 , 'FILE_MANAGER_EDIT' , 'File Manager' , -1 , sysdate , 'ADMIN');

INSERT INTO T_SEC_R_S_R ( F_SID , F_RIGHTS , F_ROLE_ID, F_USER_UPDATED, F_DATE_STAMP )
SELECT -2285 , 2 , F_ROLE_ID, 'ADMIN',  sysdate FROM T_SEC_ROLES;

COMMIT;
 
 
DELETE FROM T_SEC_OBJECTS WHERE F_SID = '-2286';
DELETE FROM T_SEC_R_S_R WHERE F_SID = '-2286';
 
INSERT INTO T_SEC_OBJECTS ( F_SID , F_NAME , F_PARENT , F_TYPE , F_DATE_STAMP , F_USER_UPDATED )
VALUES (-2286 , 'MANAGE_DOC_TYPES' , 'Author' , -1 , sysdate , 'ADMIN');

INSERT INTO T_SEC_R_S_R ( F_SID , F_RIGHTS , F_ROLE_ID, F_USER_UPDATED, F_DATE_STAMP )
SELECT -2286 , 2 , F_ROLE_ID, 'ADMIN',  sysdate FROM T_SEC_ROLES;

COMMIT;
 
 
DELETE FROM T_SEC_OBJECTS WHERE F_SID = '-2290';
DELETE FROM T_SEC_R_S_R WHERE F_SID = '-2290';
 
INSERT INTO T_SEC_OBJECTS ( F_SID , F_NAME , F_PARENT , F_TYPE , F_DATE_STAMP , F_USER_UPDATED )
VALUES (-2290 , 'SARA_ADD_INVENTORY' , 'SARA REPORTING' , -1 , sysdate , 'ADMIN');

INSERT INTO T_SEC_R_S_R ( F_SID , F_RIGHTS , F_ROLE_ID, F_USER_UPDATED, F_DATE_STAMP )
SELECT -2290 , 2 , F_ROLE_ID, 'ADMIN',  sysdate FROM T_SEC_ROLES;

COMMIT;
 
 
DELETE FROM T_SEC_OBJECTS WHERE F_SID = '-2291';
DELETE FROM T_SEC_R_S_R WHERE F_SID = '-2291';
 
INSERT INTO T_SEC_OBJECTS ( F_SID , F_NAME , F_PARENT , F_TYPE , F_DATE_STAMP , F_USER_UPDATED )
VALUES (-2291 , 'SARA_EDIT_INVENTORY' , 'SARA REPORTING' , -1 , sysdate , 'ADMIN');

INSERT INTO T_SEC_R_S_R ( F_SID , F_RIGHTS , F_ROLE_ID, F_USER_UPDATED, F_DATE_STAMP )
SELECT -2291 , 2 , F_ROLE_ID, 'ADMIN',  sysdate FROM T_SEC_ROLES;

COMMIT;
 
 
DELETE FROM T_SEC_OBJECTS WHERE F_SID = '-2292';
DELETE FROM T_SEC_R_S_R WHERE F_SID = '-2292';
 
INSERT INTO T_SEC_OBJECTS ( F_SID , F_NAME , F_PARENT , F_TYPE , F_DATE_STAMP , F_USER_UPDATED )
VALUES (-2292 , 'SARA_DELETE_INVENTORY' , 'SARA REPORTING' , -1 , sysdate , 'ADMIN');

INSERT INTO T_SEC_R_S_R ( F_SID , F_RIGHTS , F_ROLE_ID, F_USER_UPDATED, F_DATE_STAMP )
SELECT -2292 , 2 , F_ROLE_ID, 'ADMIN',  sysdate FROM T_SEC_ROLES;

COMMIT;
 
 
DELETE FROM T_SEC_OBJECTS WHERE F_SID = '-2293';
DELETE FROM T_SEC_R_S_R WHERE F_SID = '-2293';
 
INSERT INTO T_SEC_OBJECTS ( F_SID , F_NAME , F_PARENT , F_TYPE , F_DATE_STAMP , F_USER_UPDATED )
VALUES (-2293 , 'SARA_COPY_INVENTORY' , 'SARA REPORTING' , -1 , sysdate , 'ADMIN');

INSERT INTO T_SEC_R_S_R ( F_SID , F_RIGHTS , F_ROLE_ID, F_USER_UPDATED, F_DATE_STAMP )
SELECT -2293 , 2, F_ROLE_ID, 'ADMIN',  sysdate FROM T_SEC_ROLES;

COMMIT;
 
 
DELETE FROM T_SEC_OBJECTS WHERE F_SID = '-2287';
DELETE FROM T_SEC_R_S_R WHERE F_SID = '-2287';

INSERT INTO T_SEC_OBJECTS ( F_SID , F_NAME , F_PARENT , F_TYPE , F_DATE_STAMP , F_USER_UPDATED )
 VALUES (-2287, 'IMPEXP_IMPORT_GSF', 'Import/Export', -1,  sysdate , 'ADMIN');
 
INSERT INTO T_SEC_R_S_R ( F_SID , F_RIGHTS , F_ROLE_ID, F_USER_UPDATED, F_DATE_STAMP )
SELECT -2287, 2, f_role_id, 'ADMIN',  sysdate FROM T_SEC_ROLES;

COMMIT; 
 
 
DELETE FROM T_SEC_OBJECTS WHERE F_SID = '-2288';
DELETE FROM T_SEC_R_S_R WHERE F_SID = '-2288';

INSERT INTO T_SEC_OBJECTS ( F_SID , F_NAME , F_PARENT , F_TYPE , F_DATE_STAMP , F_USER_UPDATED ) 
VALUES (-2288, 'IMPEXP_IMPORT_FILESUBFORMAT', 'Import/Export', -1,  sysdate , 'ADMIN');
 
INSERT INTO T_SEC_R_S_R ( F_SID , F_RIGHTS , F_ROLE_ID, F_USER_UPDATED, F_DATE_STAMP ) 
SELECT -2288, 2, f_role_id, 'ADMIN',  sysdate  FROM T_SEC_ROLES;

COMMIT;
 
 
DELETE FROM T_SEC_OBJECTS WHERE F_SID = '-2289';
DELETE FROM T_SEC_R_S_R WHERE F_SID = '-2289';

INSERT INTO T_SEC_OBJECTS ( F_SID , F_NAME , F_PARENT , F_TYPE , F_DATE_STAMP , F_USER_UPDATED ) 
VALUES (-2289, 'IMPEXP_EXPORT_SUBFORMAT', 'Import/Export', -1,  sysdate , 'ADMIN');
 
INSERT INTO T_SEC_R_S_R ( F_SID , F_RIGHTS , F_ROLE_ID, F_USER_UPDATED, F_DATE_STAMP ) 
SELECT -2289, 2, f_role_id, 'ADMIN',  sysdate  FROM T_SEC_ROLES;
 
COMMIT; 
 
 
DELETE FROM T_SEC_OBJECTS WHERE F_SID = '-2294';
DELETE FROM T_SEC_R_S_R WHERE F_SID = '-2294';

INSERT INTO T_SEC_OBJECTS ( F_SID , F_NAME , F_PARENT , F_TYPE , F_DATE_STAMP , F_USER_UPDATED )
VALUES (-2294 , 'WERCSMART_CONNECT' , 'X10D' , -1 , sysdate , 'ADMIN');

INSERT INTO T_SEC_R_S_R ( F_SID , F_RIGHTS , F_ROLE_ID, F_USER_UPDATED, F_DATE_STAMP )
SELECT -2294 , 2, F_ROLE_ID, 'ADMIN',  sysdate FROM T_SEC_ROLES;

COMMIT;
 
 
DELETE FROM T_SEC_OBJECTS WHERE F_SID = '-2295';
DELETE FROM T_SEC_R_S_R WHERE F_SID = '-2295';

INSERT INTO T_SEC_OBJECTS ( F_SID , F_NAME , F_PARENT , F_TYPE , F_DATE_STAMP , F_USER_UPDATED )
VALUES (-2295 , 'PORTAL_PRODUCTS' , 'X10D' , -1 , sysdate , 'ADMIN');

INSERT INTO T_SEC_R_S_R ( F_SID , F_RIGHTS , F_ROLE_ID, F_USER_UPDATED, F_DATE_STAMP )
SELECT -2295 , 2 , F_ROLE_ID, 'ADMIN',  sysdate FROM T_SEC_ROLES;

COMMIT;
 
 
DELETE FROM T_SEC_OBJECTS WHERE F_SID = '-2296';
DELETE FROM T_SEC_R_S_R WHERE F_SID = '-2296';
 
INSERT INTO T_SEC_OBJECTS ( F_SID , F_NAME , F_PARENT , F_TYPE , F_DATE_STAMP , F_USER_UPDATED )
VALUES (-2296 , 'PORTAL_PRODUCTS_FORWARD' , 'X10D', -1 , sysdate , 'ADMIN');

INSERT INTO T_SEC_R_S_R ( F_SID , F_RIGHTS , F_ROLE_ID, F_USER_UPDATED, F_DATE_STAMP )
SELECT -2296 , 2 , F_ROLE_ID, 'ADMIN',  sysdate FROM T_SEC_ROLES;

COMMIT;
 
 
DELETE FROM T_SEC_OBJECTS WHERE F_SID = '-2297';
DELETE FROM T_SEC_R_S_R WHERE F_SID = '-2297';
 
INSERT INTO T_SEC_OBJECTS ( F_SID , F_NAME , F_PARENT , F_TYPE , F_DATE_STAMP , F_USER_UPDATED )
VALUES (-2297 , 'PORTAL_PRODUCTS_UPC_MANAGER' , 'X10D', -1 , sysdate , 'ADMIN');

INSERT INTO T_SEC_R_S_R ( F_SID , F_RIGHTS , F_ROLE_ID, F_USER_UPDATED, F_DATE_STAMP )
SELECT -2297 , 2 , F_ROLE_ID, 'ADMIN',  sysdate FROM T_SEC_ROLES;
COMMIT;
 
 
DELETE FROM T_SEC_OBJECTS WHERE F_SID = '-2298';
DELETE FROM T_SEC_R_S_R WHERE F_SID = '-2298';
 
INSERT INTO T_SEC_OBJECTS ( F_SID , F_NAME , F_PARENT , F_TYPE , F_DATE_STAMP , F_USER_UPDATED )
VALUES (-2298 , 'PORTAL_PRODUCTS_MY_CART' , 'X10D', -1 , sysdate , 'ADMIN');

INSERT INTO T_SEC_R_S_R ( F_SID , F_RIGHTS , F_ROLE_ID, F_USER_UPDATED, F_DATE_STAMP )
SELECT -2298 , 2 , F_ROLE_ID, 'ADMIN',  sysdate FROM T_SEC_ROLES;

COMMIT;
 
 
DELETE FROM T_SEC_OBJECTS WHERE F_SID = '-96';
DELETE FROM T_SEC_R_S_R WHERE F_SID = '-96';
 
INSERT INTO T_SEC_OBJECTS ( F_SID , F_NAME , F_PARENT , F_TYPE , F_DATE_STAMP , F_USER_UPDATED )
VALUES (-96 , 'WERCS x10d' , 'WERCS' , 1 , sysdate , 'ADMIN');

INSERT INTO T_SEC_R_S_R ( F_SID , F_RIGHTS , F_ROLE_ID, F_USER_UPDATED, F_DATE_STAMP )
SELECT -96 , 2 , F_ROLE_ID, 'ADMIN',  sysdate FROM T_SEC_ROLES;

COMMIT;
 
 
DELETE FROM T_SEC_OBJECTS WHERE F_SID = '-2299';
DELETE FROM T_SEC_R_S_R WHERE F_SID = '-2299';

INSERT INTO T_SEC_OBJECTS ( F_SID , F_NAME , F_PARENT , F_TYPE , F_DATE_STAMP , F_USER_UPDATED )
VALUES (-2299 , 'PD_SUBSECTION_SECURITY' , 'AUTHOR', -1 , sysdate , 'ADMIN');

INSERT INTO T_SEC_R_S_R ( F_SID , F_RIGHTS , F_ROLE_ID, F_USER_UPDATED, F_DATE_STAMP )
SELECT -2299 , 2 , F_ROLE_ID, 'ADMIN',  sysdate FROM T_SEC_ROLES;

COMMIT;
 
 
DELETE FROM T_SEC_USER_ROLES WHERE F_ROLE_ID NOT IN (SELECT F_ROLE_ID FROM T_SEC_ROLES);
 
DELETE FROM T_SEC_OBJECTS WHERE F_SID = '-2229';
DELETE FROM T_SEC_R_S_R WHERE F_SID = '-2229';

COMMIT;


-- Existing table adjustments

ALTER TABLE T_DATATYPES MODIFY F_LABEL_COL NUMBER(4,0);

ALTER TABLE T_MSDSTYPES ADD F_SCOPE INTEGER DEFAULT 0;

ALTER TABLE T_REPORT_DEFINITIONS ADD F_SCOPE INTEGER DEFAULT 0;

ALTER TABLE T_RULES ADD F_SCOPE INTEGER DEFAULT 0;

ALTER TABLE T_RULE_GROUPS ADD F_SCOPE INTEGER DEFAULT 0;

ALTER TABLE T_GROUP_MEMBERS ADD F_SCOPE INTEGER DEFAULT 0;

ALTER TABLE T_SECTIONS ADD F_GUID VARCHAR2(50);

ALTER TABLE T_MSDSTYPES ADD F_GUID VARCHAR2(50);

ALTER TABLE T_MSDSTYPES ADD F_CUSTOM1_USAGE VARCHAR2(4) NULL;

ALTER TABLE T_MSDSTYPES ADD F_CUSTOM2_USAGE VARCHAR2(4) NULL;

ALTER TABLE T_MSDSTYPES ADD F_CUSTOM3_USAGE VARCHAR2(4) NULL;

ALTER TABLE T_MSDSTYPES ADD F_CUSTOM4_USAGE VARCHAR2(4) NULL;

ALTER TABLE T_MSDSTYPES ADD F_CUSTOM5_USAGE VARCHAR2(4) NULL;


-- ALTER WERCS LISTDATAMERGE_R

  CREATE OR REPLACE FORCE VIEW WERCS.LISTDATAMERGE_R 
  (DATAKEY_HIST,DATAKEY, CAS, LISTID, DATA_HIST, DATA, DATA_CHANGES, DATA_CHANGESEXT, LISTNAME, RELEASEDATE) AS 
  SELECT 
	H.DATAKEY AS DATAKEY_HIST,
        D.DATAKEY,
	D.CAS,
    D.LISTID,
    CAST (H.DATA AS VARCHAR2 (4000)) AS DATA_HIST,
    CAST (D.DATA AS VARCHAR2 (4000))  AS DATA,
    CAST((SUBSTR(CHANGES, 0, 4000)) AS VARCHAR2(4000)) DATA_CHANGES, 
    CAST((SUBSTR(CHANGES, 4001, 8000)) AS VARCHAR2(4000)) DATA_CHANGESEXT, 
    N.LISTNAME,
    M.RELEASEDATE
  FROM LISTNAMES N
  RIGHT OUTER JOIN LISTDATA2 D
  INNER JOIN LISTDATA_HISTORY H
  ON D.LISTID = H.LISTID
  AND D.CAS   = H.CAS
  ON N.LISTID = D.LISTID
  INNER JOIN RELEASEHISTORY M
  ON M.UPD_ID = H.UPD_ID
  WHERE (H.UPDATEACTION = 'C') AND ( D.ADMINCHANGE = 0)
WITH READ ONLY;




--New v21 Tables

CREATE TABLE WERCS.T_WS_MAP
  (
    F_ID        VARCHAR2(50 BYTE),
    F_ORIGIN    NUMBER(*,0) NOT NULL ENABLE,
    F_TYPE      NUMBER(*,0) NOT NULL ENABLE,
    F_SOURCE    VARCHAR2(51 BYTE) NOT NULL ENABLE,
    F_MAPPED    VARCHAR2(51 BYTE) NOT NULL ENABLE,
    F_ALTERNATE VARCHAR2(8 BYTE) ,
    F_SCOPE     NUMBER(*,0) DEFAULT 0 NOT NULL ENABLE,
    CONSTRAINT PK_T_WS_MAP PRIMARY KEY (F_TYPE, F_SOURCE, F_SCOPE) 
    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
    STORAGE(INITIAL 500K NEXT 500K MINEXTENTS 1 MAXEXTENTS 2147483645
    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT) 
    TABLESPACE WERCSIDX ENABLE
  )
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING 
  STORAGE (INITIAL 1M NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 
    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE WERCSDATA ;
  
 
 CREATE TABLE WERCS.T_SUBFORMAT_IMPORT
  (
    F_GUID VARCHAR2(50 BYTE) NOT NULL ENABLE,
    F_VERSION        VARCHAR2(32 BYTE) NOT NULL ENABLE,
    F_STATUS         NUMBER(*,0) NOT NULL ENABLE,
    F_IMPORTING_USER VARCHAR2(30 BYTE) NOT NULL ENABLE,
    F_IMPORT_DOCUMENT WERCS.XMLTYPE,
    F_DESTINATION_FORMAT VARCHAR2(3 BYTE),
    CONSTRAINT PK_SUBFORMAT_IMPORT PRIMARY KEY (F_GUID) 
    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
    STORAGE(INITIAL 500K NEXT 500K MINEXTENTS 1 MAXEXTENTS 2147483645
    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT) 
    TABLESPACE WERCSIDX ENABLE
  )
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING 
  STORAGE (INITIAL 1M NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 
    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE WERCSDATA
  XMLTYPE COLUMN F_IMPORT_DOCUMENT STORE AS CLOB
  (
    TABLESPACE WERCSDATA ENABLE STORAGE IN ROW CHUNK 8192 PCTVERSION 10 NOCACHE LOGGING 
    STORAGE(INITIAL 1M NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 PCTINCREASE 0 
    FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  ) ;



CREATE TABLE WERCS.T_PROD_UPC
  (
    F_PRODUCT      VARCHAR2(50 BYTE) NOT NULL ENABLE,
    F_UPC          VARCHAR2(20 BYTE) NOT NULL ENABLE,
    F_UPC_ID       VARCHAR2(50 BYTE),
    F_SIZE         NUMBER,
    F_PACKAGE_TYPE VARCHAR2(8 BYTE),
    F_USER_UPDATED VARCHAR2(15 BYTE),
    F_DATE_STAMP DATE,
    CONSTRAINT T_PROD_UPC_PK PRIMARY KEY (F_PRODUCT, F_UPC) 
    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
    STORAGE(INITIAL 500K NEXT 500K MINEXTENTS 1 MAXEXTENTS 2147483645
    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT) 
    TABLESPACE WERCSIDX ENABLE
  )
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING 
  STORAGE (INITIAL 1M NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 
    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE WERCSDATA ;
  
  
  
CREATE TABLE WERCS.T_PROD_UPC_RETAILERS
  (
    F_PRODUCT        VARCHAR2(50 BYTE) NOT NULL ENABLE,
    F_UPC            VARCHAR2(20 BYTE) NOT NULL ENABLE,
    F_RTLER_TEXTCODE VARCHAR2(8 BYTE),
    F_VENDOR_ID      VARCHAR2(50 BYTE),
    F_ITEM_NUM       VARCHAR2(50 BYTE),
    F_ITEM_DESC      VARCHAR2(50 BYTE),
    F_STATUS         NUMBER,
    F_USER_UPDATED   VARCHAR2(15 BYTE),
    F_Additional     VARCHAR2(50 BYTE),
    F_DATE_STAMP     DATE,
    CONSTRAINT T_PROD_UPC_RETAILERS_PK PRIMARY KEY (F_PRODUCT, F_UPC,F_RTLER_TEXTCODE)
     USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
    STORAGE(INITIAL 500K NEXT 500K MINEXTENTS 1 MAXEXTENTS 2147483645
    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT) 
    TABLESPACE WERCSIDX ENABLE
  )
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING 
  STORAGE (INITIAL 1M NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 
    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE WERCSDATA;

  
  CREATE TABLE WERCS.T_PORTAL_PRODUCTS
  (
    F_GUID VARCHAR2(50) NOT NULL ENABLE,
    F_PRODUCT    VARCHAR2(50 BYTE),
    F_INT_STATUS NUMBER(10,0) DEFAULT 0,
    F_DATE_STAMP DATE,
    F_USER_UPDATED VARCHAR2(15 BYTE),
    F_ATTRIBUTES LONG, 
    F_WERCSMART_ID NUMBER(10,0),
    PRIMARY KEY (F_GUID) 
    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
    STORAGE(INITIAL 500K NEXT 500K MINEXTENTS 1 MAXEXTENTS 2147483645
    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT) 
    TABLESPACE WERCSIDX ENABLE
  )
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING 
  STORAGE (INITIAL 1M NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 
    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE WERCSDATA ;

  
  CREATE TABLE WERCS.T_PORTAL_PRODUCT_STATUS 
  (
	F_PRODUCT_GUID VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	F_RETAILER_TEXTCODE VARCHAR2(8 BYTE) NOT NULL ENABLE, 
	F_STATUS NUMBER NOT NULL ENABLE, 
	F_DATE_STAMP DATE NOT NULL ENABLE, 
	F_USER_UPDATED VARCHAR2(15 BYTE) NOT NULL ENABLE,
	PRIMARY KEY (F_PRODUCT_GUID, F_RETAILER_TEXTCODE) 
    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
    STORAGE(INITIAL 500K NEXT 500K MINEXTENTS 1 MAXEXTENTS 2147483645
    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT) 
    TABLESPACE WERCSIDX ENABLE
  )
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING 
  STORAGE (INITIAL 1M NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 
    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE WERCSDATA ;
 
  
-- New component security functionality

ALTER TABLE T_COMPONENTS ADD F_SID NUMBER (20,0);

--populate sids starting at 1000000000
CREATE SEQUENCE TEMP_COMP_SID INCREMENT BY 1 START WITH 1000000000 CACHE 20 ORDER;

UPDATE T_COMPONENTS SET F_SID = TEMP_COMP_SID.nextval;

DROP SEQUENCE TEMP_COMP_SID;

INSERT INTO T_SEC_R_S_R (F_ROLE_ID,F_SID,F_RIGHTS)
SELECT R.F_ROLE_ID,C.F_SID,2 
FROM T_COMPONENTS C, T_SEC_ROLES R;

INSERT INTO T_LOOKUP (F_PARENT,F_KEY,F_VALUE,F_DATE_STAMP,F_USER_UPDATED)
VALUES ('SECURITY', 'INITIAL_COMPONENT_SECURITY_LVL',2,sysdate,'ADMIN');

INSERT INTO T_SEC_OBJECTS (F_SID,F_NAME,F_PARENT,F_TYPE,F_URL,F_ICON,F_DATE_STAMP,F_USER_UPDATED)
VALUES (-2283,'COMPONENTSECURITY','Author',-1,null,null,sysdate,'ADMIN');

INSERT INTO T_SEC_R_S_R (F_ROLE_ID,F_RIGHTS,F_SID,F_DATE_STAMP,F_USER_UPDATED)
SELECT F_ROLE_ID,2,-2283,sysdate,'ADMIN' FROM T_SEC_ROLES;


DELETE FROM T_LOOKUP
WHERE F_PARENT IN
(SELECT F_USER_NAME FROM T_SEC_USERS);

COMMIT;




--final updates

UPDATE T_SEC_USERS
SET F_USER_NAME = UPPER(F_USER_NAME);

UPDATE T_EMPLOYEES 
SET F_EMPLOYEE_USER_ID = UPPER(F_EMPLOYEE_USER_ID);

COMMIT;



CREATE OR REPLACE FUNCTION MAJ_USAGE 
(format IN VARCHAR2, subf IN VARCHAR2, datacode IN VARCHAR2)
RETURN VARCHAR2 IS usage VARCHAR2(36);
BEGIN
    
      SELECT X.F_DATABASE_ORIGIN_CODE 
      INTO usage 
      FROM (SELECT D.F_DATABASE_ORIGIN_CODE, count(*) 
FROM T_DATATYPES D, T_MSDSTYPE_SECTIONS S
WHERE S.F_FORMAT = format
AND S.F_MSDSTYPE = subf
AND D.F_FORMAT = S.F_FORMAT
AND D.F_SECTION = S.F_SECTION
AND D.F_DATA_CODE = datacode
AND D.F_DATABASE_ORIGIN_CODE IN ('PVAL','PTXT')
GROUP BY D.F_DATABASE_ORIGIN_CODE
ORDER BY count(*) DESC) X
WHERE rownum=1;

      RETURN(usage); 

END MAJ_USAGE;
/



UPDATE T_MSDSTYPES MT 
SET MT.F_CUSTOM1_USAGE = (SELECT DISTINCT MAJ_USAGE(S.F_FORMAT,S.F_MSDSTYPE,D.F_DATA_CODE)
FROM T_DATATYPES D, T_MSDSTYPE_SECTIONS S
WHERE S.F_FORMAT = MT.F_FORMAT
AND S.F_MSDSTYPE = MT.F_MSDSTYPE
AND D.F_FORMAT = S.F_FORMAT
AND D.F_SECTION = S.F_SECTION
AND D.F_DATA_CODE = MT.F_CUSTOM1
AND D.F_DATABASE_ORIGIN_CODE IN ('PVAL','PTXT'))
WHERE MT.F_CUSTOM1 IS NOT NULL
AND LENGTH(MT.F_CUSTOM1) > 0
AND EXISTS (SELECT 'X' FROM T_DATATYPES D, T_MSDSTYPE_SECTIONS S
WHERE S.F_FORMAT = MT.F_FORMAT
AND S.F_MSDSTYPE = MT.F_MSDSTYPE
AND D.F_FORMAT = S.F_FORMAT
AND D.F_SECTION = S.F_SECTION
AND D.F_DATA_CODE = MT.F_CUSTOM1
AND D.F_DATABASE_ORIGIN_CODE IN ('PVAL','PTXT'));


UPDATE T_MSDSTYPES MT 
SET MT.F_CUSTOM2_USAGE = (SELECT DISTINCT MAJ_USAGE(S.F_FORMAT,S.F_MSDSTYPE,D.F_DATA_CODE)
FROM T_DATATYPES D, T_MSDSTYPE_SECTIONS S
WHERE S.F_FORMAT = MT.F_FORMAT
AND S.F_MSDSTYPE = MT.F_MSDSTYPE
AND D.F_FORMAT = S.F_FORMAT
AND D.F_SECTION = S.F_SECTION
AND D.F_DATA_CODE = MT.F_CUSTOM2
AND D.F_DATABASE_ORIGIN_CODE IN ('PVAL','PTXT'))
WHERE MT.F_CUSTOM2 IS NOT NULL
AND LENGTH(MT.F_CUSTOM2) > 0
AND EXISTS (SELECT 'X' FROM T_DATATYPES D, T_MSDSTYPE_SECTIONS S
WHERE S.F_FORMAT = MT.F_FORMAT
AND S.F_MSDSTYPE = MT.F_MSDSTYPE
AND D.F_FORMAT = S.F_FORMAT
AND D.F_SECTION = S.F_SECTION
AND D.F_DATA_CODE = MT.F_CUSTOM2
AND D.F_DATABASE_ORIGIN_CODE IN ('PVAL','PTXT'));


UPDATE T_MSDSTYPES MT 
SET MT.F_CUSTOM3_USAGE = (SELECT DISTINCT MAJ_USAGE(S.F_FORMAT,S.F_MSDSTYPE,D.F_DATA_CODE)
FROM T_DATATYPES D, T_MSDSTYPE_SECTIONS S
WHERE S.F_FORMAT = MT.F_FORMAT
AND S.F_MSDSTYPE = MT.F_MSDSTYPE
AND D.F_FORMAT = S.F_FORMAT
AND D.F_SECTION = S.F_SECTION
AND D.F_DATA_CODE = MT.F_CUSTOM3
AND D.F_DATABASE_ORIGIN_CODE IN ('PVAL','PTXT'))
WHERE MT.F_CUSTOM3 IS NOT NULL
AND LENGTH(MT.F_CUSTOM3) > 0
AND EXISTS (SELECT 'X' FROM T_DATATYPES D, T_MSDSTYPE_SECTIONS S
WHERE S.F_FORMAT = MT.F_FORMAT
AND S.F_MSDSTYPE = MT.F_MSDSTYPE
AND D.F_FORMAT = S.F_FORMAT
AND D.F_SECTION = S.F_SECTION
AND D.F_DATA_CODE = MT.F_CUSTOM3
AND D.F_DATABASE_ORIGIN_CODE IN ('PVAL','PTXT'));


UPDATE T_MSDSTYPES MT 
SET MT.F_CUSTOM4_USAGE = (SELECT DISTINCT MAJ_USAGE(S.F_FORMAT,S.F_MSDSTYPE,D.F_DATA_CODE)
FROM T_DATATYPES D, T_MSDSTYPE_SECTIONS S
WHERE S.F_FORMAT = MT.F_FORMAT
AND S.F_MSDSTYPE = MT.F_MSDSTYPE
AND D.F_FORMAT = S.F_FORMAT
AND D.F_SECTION = S.F_SECTION
AND D.F_DATA_CODE = MT.F_CUSTOM4
AND D.F_DATABASE_ORIGIN_CODE IN ('PVAL','PTXT'))
WHERE MT.F_CUSTOM4 IS NOT NULL
AND LENGTH(MT.F_CUSTOM4) > 0
AND EXISTS (SELECT 'X' FROM T_DATATYPES D, T_MSDSTYPE_SECTIONS S
WHERE S.F_FORMAT = MT.F_FORMAT
AND S.F_MSDSTYPE = MT.F_MSDSTYPE
AND D.F_FORMAT = S.F_FORMAT
AND D.F_SECTION = S.F_SECTION
AND D.F_DATA_CODE = MT.F_CUSTOM4
AND D.F_DATABASE_ORIGIN_CODE IN ('PVAL','PTXT'));


UPDATE T_MSDSTYPES MT 
SET MT.F_CUSTOM5_USAGE = (SELECT DISTINCT MAJ_USAGE(S.F_FORMAT,S.F_MSDSTYPE,D.F_DATA_CODE)
FROM T_DATATYPES D, T_MSDSTYPE_SECTIONS S
WHERE S.F_FORMAT = MT.F_FORMAT
AND S.F_MSDSTYPE = MT.F_MSDSTYPE
AND D.F_FORMAT = S.F_FORMAT
AND D.F_SECTION = S.F_SECTION
AND D.F_DATA_CODE = MT.F_CUSTOM5
AND D.F_DATABASE_ORIGIN_CODE IN ('PVAL','PTXT'))
WHERE MT.F_CUSTOM5 IS NOT NULL
AND LENGTH(MT.F_CUSTOM5) > 0
AND EXISTS (SELECT 'X' FROM T_DATATYPES D, T_MSDSTYPE_SECTIONS S
WHERE S.F_FORMAT = MT.F_FORMAT
AND S.F_MSDSTYPE = MT.F_MSDSTYPE
AND D.F_FORMAT = S.F_FORMAT
AND D.F_SECTION = S.F_SECTION
AND D.F_DATA_CODE = MT.F_CUSTOM5
AND D.F_DATABASE_ORIGIN_CODE IN ('PVAL','PTXT'));

UPDATE T_A_RULES
SET F_PVS_TYPE = 5
WHERE F_SUBSECTION_ID = 'MULTI';


UPDATE T_PROD_CUST_HISTORY SET F_DESTINATION = ' ' WHERE F_DESTINATION IS NULL;
UPDATE T_CUST_REQUESTS SET F_DESTINATION = ' ' WHERE F_DESTINATION IS NULL;




COMMIT;

  --create GHSWIZ as user
  
  INSERT INTO T_SEC_USERS (F_USER_ID, F_USER_NAME,F_FIRST_NAME,F_LAST_NAME,F_PASSWORD, F_DATE_STAMP, F_USER_UPDATED)
  SELECT MAX(F_USER_ID)+1,'GHSWIZ','GHSWIZ','SYSTEM','GHSWIZ1',sysdate,'GHSWIZ' FROM T_SEC_USERS;

  COMMIT;
  
  
  --Function to generate a well-formed GUID from Oracle

CREATE OR REPLACE FUNCTION NEWID RETURN VARCHAR2 IS 
    guid VARCHAR2(36);
BEGIN
    guid := SYS_GUID();
    guid :=
               SUBSTR(guid,  1, 8) ||
        '-' || SUBSTR(guid,  9, 4) ||
        '-' || SUBSTR(guid, 13, 4) ||
        '-' || SUBSTR(guid, 17, 4) ||
        '-' || SUBSTR(guid, 21);
    RETURN guid;
END NEWID;
/



--T_PDF_MSDS

CREATE OR REPLACE
TRIGGER T_PDF_INSERT_NEWGUID
BEFORE INSERT ON T_PDF_MSDS FOR EACH ROW 
DECLARE 
  v_newguid VARCHAR2(50);
  v_firsteight VARCHAR2(8);
BEGIN  
  SELECT NEWID INTO v_newguid FROM dual;  
  IF :new.F_GUID IS NULL THEN      
    :new.F_GUID := v_newguid;  
  ELSE
    v_firsteight := SUBSTR(:new.F_GUID,1,8);
    IF v_firsteight = '00000000' THEN  
      :new.F_GUID := v_newguid;  
    END IF;
  END IF;  
END;
/


--T_HTML_MSDS

CREATE OR REPLACE
TRIGGER T_HTML_INSERT_NEWGUID
BEFORE INSERT ON T_HTML_MSDS FOR EACH ROW 
DECLARE 
  v_newguid VARCHAR2(50);
  v_firsteight VARCHAR2(8);
BEGIN  
  SELECT NEWID INTO v_newguid FROM dual;  
  IF :new.F_GUID IS NULL THEN      
    :new.F_GUID := v_newguid;  
  ELSE
    v_firsteight := SUBSTR(:new.F_GUID,1,8);
    IF v_firsteight = '00000000' THEN  
      :new.F_GUID := v_newguid;  
    END IF;
  END IF;  
END;
/


--T_RTF_MSDS

CREATE OR REPLACE
TRIGGER T_RTF_INSERT_NEWGUID
BEFORE INSERT ON T_RTF_MSDS FOR EACH ROW 
DECLARE 
  v_newguid VARCHAR2(50);
  v_firsteight VARCHAR2(8);
BEGIN  
  SELECT NEWID INTO v_newguid FROM dual;  
  IF :new.F_GUID IS NULL THEN      
    :new.F_GUID := v_newguid;  
  ELSE
    v_firsteight := SUBSTR(:new.F_GUID,1,8);
    IF v_firsteight = '00000000' THEN  
      :new.F_GUID := v_newguid;  
    END IF;
  END IF;  
END;
/


--T_MSDSTYPES

CREATE OR REPLACE
TRIGGER T_TYPES_INSERT_NEWGUID
BEFORE INSERT ON T_MSDSTYPES FOR EACH ROW 
DECLARE 
  v_newguid VARCHAR2(50);
  v_firsteight VARCHAR2(8);
BEGIN  
  SELECT NEWID INTO v_newguid FROM dual;  
  IF :new.F_GUID IS NULL THEN      
    :new.F_GUID := v_newguid;  
  ELSE
    v_firsteight := SUBSTR(:new.F_GUID,1,8);
    IF v_firsteight = '00000000' THEN  
      :new.F_GUID := v_newguid;  
    END IF;
  END IF;  
END;
/


--T_SECTIONS

create or replace
TRIGGER T_SECTS_INSERT_NEWGUID
BEFORE INSERT ON T_SECTIONS FOR EACH ROW 
DECLARE 
  v_newguid VARCHAR2(50);
  v_firsteight VARCHAR2(8);
BEGIN  
  SELECT NEWID INTO v_newguid FROM dual;  
  IF :new.F_GUID IS NULL THEN      
    :new.F_GUID := v_newguid;  
  ELSE
    v_firsteight := SUBSTR(:new.F_GUID,1,8);
    IF v_firsteight = '00000000' THEN  
      :new.F_GUID := v_newguid;  
    END IF;
  END IF;  
END;
/


UPDATE T_MSDSTYPES 
SET F_GUID = NEWID()
WHERE F_GUID IS NULL OR SUBSTR(F_GUID,1,8) = '00000000';


UPDATE T_SECTIONS 
SET F_GUID = NEWID()
WHERE F_GUID IS NULL OR SUBSTR(F_GUID,1,8) = '00000000';

COMMIT;


--final alters

ALTER TABLE T_PROD_CUST_HISTORY MODIFY F_DESTINATION VARCHAR2(255) NOT NULL;


ALTER TABLE T_PROD_CUST_HISTORY DROP PRIMARY KEY ;

ALTER TABLE T_PROD_CUST_HISTORY ADD CONSTRAINT PK_T_PROD_CUST_HISTORY 
PRIMARY KEY (F_CUSTOMER_ID,F_PRODUCT,F_FORMAT,F_MSDSTYPE,F_ALIAS,F_LANGUAGE,F_DESTINATION)
     USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
    STORAGE(INITIAL 1M NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645
    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT) 
    TABLESPACE WERCSIDX ENABLE
;


 
ALTER TABLE T_CUST_REQUESTS MODIFY F_DESTINATION VARCHAR2(255) NOT NULL;

ALTER TABLE T_CUST_REQUESTS MODIFY F_MSDSTYPE VARCHAR2(4) NOT NULL;

ALTER TABLE T_CUST_REQUESTS DROP PRIMARY KEY ;

ALTER TABLE T_CUST_REQUESTS ADD CONSTRAINT PK_T_CUST_REQUESTS 
PRIMARY KEY (F_CUSTOMER_ID,F_PRODUCT,F_PRODUCT_GROUP,F_FORMAT,F_DATE_REQUESTED,F_TIME_REQUESTED,F_ALIAS,F_LANGUAGE,F_MSDSTYPE,F_DESTINATION)
     USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
    STORAGE(INITIAL 1M NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645
    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT) 
    TABLESPACE WERCSIDX ENABLE
;


UPDATE T_GHS_WIZARD_ENTITIES SET F_CHILD_NO_NODE = 574 WHERE F_ID = 339;

INSERT INTO T_LOOKUP 
(F_PARENT,F_KEY,F_VALUE,F_USER_UPDATED,F_DATE_STAMP)
VALUES 
('SECURITY','ADMIN_ADD_FULL','1','ADMIN',sysdate);

INSERT INTO T_GHS_WIZARD_ENTITIES 
(F_ID,F_CHILD_YES_NODE,F_CHILD_NO_NODE, F_TEXT_CODE,F_CATEGORY_NUMBER, F_SUBCATEGORY1, F_LOOKUP_KEY, F_CATEGORY_PREFIX, F_SUBCATEGORY_PREFIX, F_DATA_CODE)
VALUES
(574,null,null,null,null,null,'GHS_CATEGORY_.?',3,null,null);


INSERT INTO T_WERCS_VERSION_HISTORY 
(F_MAJ_VERSION, F_MIN_VERSION,F_ENTITY, F_DATE_STAMP)
VALUES 
('6.1', '21', 'DB Version' ,sysdate);

COMMIT;

SPOOL OFF;

