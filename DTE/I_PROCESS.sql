DROP SEQUENCE  I_PROCESS_SEQ;
CREATE SEQUENCE  I_PROCESS_SEQ INCREMENT BY 1 START WITH 1;

CREATE TABLE WERCS.I_PROCESS (
  F_RECORD_KEY NUMBER (20,0),
  F_JOB_ID NVARCHAR2(30),
  F_PROCESS_GROUP_ID NUMBER(8,0),
  F_CURRENT_PROCESS NUMBER(5,0),
  F_PRODUCT NVARCHAR2(100),
  F_CAS_NUMBER NVARCHAR2(30),
  F_COMPONENT_ID NVARCHAR2(70),
  F_LANGUAGES NVARCHAR2(100),
  F_FORMAT NVARCHAR2(100),
  F_SUBFORMAT NVARCHAR2(100),
  F_PLANT NVARCHAR2(200),
  F_AUTHORIZATION NVARCHAR2(100),
  F_SUPPLIERS NVARCHAR2(1000),
  F_REVISION_TYPE NVARCHAR2(100),
  F_HOST_NAME NVARCHAR2(510),
  F_APP_NAME NVARCHAR2(510),
  F_SOURCE NVARCHAR2(30),
  F_PRIORITY NUMBER(2,0),
  F_STATUS NUMBER(1,0),
  F_REMARKS NVARCHAR2(2000),
  F_USER_UPDATED NVARCHAR2(30),
  F_DATE_STAMP DATE,
  F_USER_INSERTED NVARCHAR2(30),
  F_DATE_STAMP_INSERTED DATE
)
   TABLESPACE WERCSDATA
   PCTFREE 10
   PCTUSED 50
   INITRANS 10
   MAXTRANS 255
 STORAGE ( 
   INITIAL 250K
   NEXT 250K
   PCTINCREASE 0
   MINEXTENTS 1
   MAXEXTENTS 300
   FREELISTS 1 FREELIST GROUPS 1 )
   NOCACHE;

ALTER TABLE I_PROCESS ADD 
 CONSTRAINT PK_I_PROCESS PRIMARY KEY 
(F_RECORD_KEY)
  USING INDEX 
  TABLESPACE WERCSIDX PCTFREE 10
  STORAGE(INITIAL 100K NEXT 100K PCTINCREASE 0 ) 
; 

CREATE OR REPLACE TRIGGER WERCS.I_PROCESS_TRIG BEFORE INSERT
ON WERCS.I_PROCESS
FOR EACH ROW
BEGIN
SELECT I_PROCESS_SEQ.NEXTVAL
INTO :NEW.F_RECORD_KEY
FROM DUAL;
END I_PROCESS_TRIG;
/

CREATE INDEX IDX_I_PROC_PROD
ON I_PROCESS
(F_PRODUCT)
  TABLESPACE WERCSIDX PCTFREE 40
  STORAGE(INITIAL 100K NEXT 100K PCTINCREASE 0 ) 
; 

CREATE INDEX IDX_I_PROC_STAT
ON I_PROCESS
(F_STATUS)
  TABLESPACE WERCSIDX PCTFREE 40
  STORAGE(INITIAL 100K NEXT 100K PCTINCREASE 0 ) 
; 

CREATE INDEX IDX_I_PROC_JOBID
ON I_PROCESS
(F_JOB_ID)
  TABLESPACE WERCSIDX PCTFREE 40
  STORAGE(INITIAL 100K NEXT 100K PCTINCREASE 0 ) 
; 

CREATE INDEX IDX_I_PROC_JOB_STA
ON I_PROCESS
(F_JOB_ID, F_STATUS)
  TABLESPACE WERCSIDX PCTFREE 40
  STORAGE(INITIAL 100K NEXT 100K PCTINCREASE 0 ) 
; 

